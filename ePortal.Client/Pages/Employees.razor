@page "/employees"
@using System.Net.Http
@using System.Text.Json
@using System.Threading.Tasks
@using System.Timers

<PageTitle>Employees | ePortal | Provincial Government of Agusan del Sur</PageTitle>
<MudTextField @bind-Value="query" T="string" Immediate="true" Variant="Variant.Outlined" OnKeyDown="HandleKeyDown"></MudTextField>
@if (pgasEmployees != null && pgasEmployees.Any())
{
    <MudStack Class="flex-wrap justify-center ma-5" Row="true">
        @foreach (var office in pgasEmployees)
        {
            <MudCard Class="ma-3 three-card pa-2">
                <MudStack Row="true" Class="justify-start">
                    <MudStack Class="justify-center">
                        <MudImage Src="@("https://pgas.ph/hris/Content/images/photos/"+ office.eid +".png")" onerror="this.src='Objects/agusan del sur.webp'" Height="150" Width="120"
                                  ObjectPosition="ObjectPosition.Top" ObjectFit="ObjectFit.Cover" Class="rounded m-0">
                        </MudImage>
                        <MudChip Color="Color.Tertiary" Style="margin-top: -40px" Class="m-0" Size="Size.Small">@office.SwipID</MudChip>
                    </MudStack>
                    <MudStack Style="width: 100%" Spacing="1">
                        <MudText Class="m-0" Typo="Typo.body1"><b>@office.EmpName</b></MudText>
                        <MudText Class="m-0" Style="font-size: 11px" Typo="Typo.body2">@office.Position</MudText>
                        <MudText Class="m-0" Style="font-size: 11px" Typo="Typo.body2">@office.OfficeName</MudText>
                        <MudDivider/>
                        <MudPaper Height="100%" Elevation="0" Class="rounded-lg" Style="background-color:ghostwhite">
                            <MudChip Color="Color.Tertiary" Class="ma-1" Size="Size.Small">@office.OfficeAbbr</MudChip>
                            <MudChip Color="Color.Primary" Class="ma-1" Size="Size.Small">@office.Status</MudChip>
                            <MudChip Color="Color.Success" Class="ma-1" Size="Size.Small">Active</MudChip>
                        </MudPaper>
                    </MudStack>
                </MudStack>
            </MudCard>
        }
    </MudStack>
}

@code {
    // Get API URL
    private readonly string API_URL = APIVariable.PGASePortalAPI;
    private List<m_vwGetAllEmployee_MinifiedDTO>? pgasEmployees;
    private List<m_vwGetAllEmployee_MinifiedDTO>? RandomEmployees;
    private string query;

    protected async Task HandleKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await GetEmployees();

           //Send the message to the API
        }
    }

    public class m_vwGetAllEmployee_MinifiedDTO
    {
        // Office
        public string OfficeName { get; set; }
        public string OfficeAbbr { get; set; }
        // Employee Details
        public string? EmpName { get; set; }
        public long? eid { get; set; }
        public string SwipID { get; set; }
        public string Position { get; set; }
        public int? SG { get; set; }
        public string Status { get; set; }
        public bool? isactive { get; set; }
    }

    private async Task GetEmployees()
    {
        try
        {
            using HttpClient httpClient = new HttpClient();
            HttpResponseMessage httpResponse = await httpClient.GetAsync(API_URL + "/api/m_vwGetAllEmployee_Minified/query?searchOfficeAbbr=" + query)!;
            httpResponse.EnsureSuccessStatusCode(); // Ensure a successful response
            using var responseStream = await httpResponse.Content.ReadAsStreamAsync();
            pgasEmployees = await JsonSerializer.DeserializeAsync<List<m_vwGetAllEmployee_MinifiedDTO>>(responseStream,
                new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
            RandomEmployees = pgasEmployees.OrderBy(x => Guid.NewGuid()).Take(12).ToList();
        }
        catch (HttpRequestException ex)
        {
            // Handle exception, log, or display an error message
            Console.WriteLine($"Error fetching data: {ex.Message}");
        }
    }
}
