@page "/files"
@inject ISnackbar Snackbar
@using Microsoft.AspNetCore.Components.Forms
@using System.IO

<PageTitle>File Management | ePortal | Provincial Government of Agusan del Sur</PageTitle>
<MudStack Class="ma-5">
    <MudTabs Outlined="true" Rounded="true" Border="true"
             ApplyEffectsToContainer="true" Class="ma-5" PanelClass="pa-6">
        <MudTabPanel Icon="@Icons.Material.Filled.PermMedia" Text="Media Files">
            <MudText>Content One</MudText>
        </MudTabPanel>
        <MudTabPanel Icon="@Icons.Material.Filled.Article" Text="Documents">
            <MudText>Content Two</MudText>
        </MudTabPanel>
    </MudTabs>
    <MudFileUpload T="IReadOnlyList<IBrowserFile>"
                   AppendMultipleFiles
                   OnFilesChanged="OnInputFileChanged"
                   Hidden="@false"
                   InputClass="absolute mud-width-full mud-height-full overflow-hidden z-20"
                   InputStyle="opacity:0"
                   @ondragenter="@SetDragClass"
                   @ondragleave="@ClearDragClass"
                   @ondragend="@ClearDragClass">
        <ButtonTemplate>
            <MudPaper Height="200px"
                      Outlined="true"
                      Class="@_dragClass">
                <MudText Typo="Typo.h6">
                    Drag and drop files here or click
                </MudText>
                @foreach (var file in _fileNames)
                {
                    <MudChip Color="Color.Dark" Text="@file" />
                }
            </MudPaper>
            <MudToolBar DisableGutters="true"
                        Class="relative d-flex justify-end gap-4 z-30">
                <MudButton HtmlTag="label"
                           Color="Color.Primary"
                           for="@context.Id"
                           Variant="Variant.Filled">
                    Open file picker
                </MudButton>
                <MudButton OnClick="@Upload"
                           Color="Color.Primary"
                           Disabled="@(!_fileNames.Any())"
                           Variant="Variant.Filled">
                    Upload
                </MudButton>
                <MudButton OnClick="@Clear"
                           Color="Color.Error"
                           Disabled="@(!_fileNames.Any())"
                           Variant="Variant.Filled">
                    Clear
                </MudButton>
            </MudToolBar>
        </ButtonTemplate>
    </MudFileUpload>
</MudStack>

@code {
    private const string DefaultDragClass = "relative rounded-lg border-2 border-dashed pa-4 mt-4 mud-width-full mud-height-full z-10";
    private string _dragClass = DefaultDragClass;
    private readonly List<string> _fileNames = new();
    private IReadOnlyList<IBrowserFile>? _files;

    private async Task Clear()
    {
        _fileNames.Clear();
        ClearDragClass();
        await Task.Delay(100);
    }

    private void OnInputFileChanged(InputFileChangeEventArgs e)
    {
        ClearDragClass();
        _files = e.GetMultipleFiles();
        foreach (var file in _files)
        {
            _fileNames.Add(file.Name);
        }
    }

    private async Task Upload()
    {
        var uploadFolderPath = @"C:\Users\jonis\source\repos\PGAS ePortal\ePortal.Client\wwwroot\Media Files";

        // Check if the upload folder exists, create it if not
        if (!Directory.Exists(uploadFolderPath))
        {
            Directory.CreateDirectory(uploadFolderPath);
        }

        foreach (var file in _files)
        {
            var fileName = Path.GetFileName(file.Name);
            var filePath = Path.Combine(uploadFolderPath, fileName);

            // Save the actual file content
            using (var fileStream = new FileStream(filePath, FileMode.Create))
            {
                await file.OpenReadStream().CopyToAsync(fileStream);
            }
        }

        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
        Snackbar.Add("Files uploaded successfully!");
    }

    private void SetDragClass()
    {
        _dragClass = $"{DefaultDragClass} mud-border-primary";
    }

    private void ClearDragClass()
    {
        _dragClass = DefaultDragClass;
    }
}
