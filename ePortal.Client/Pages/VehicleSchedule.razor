@page "/vehicle-schedule"
@using System.Text.Json
@using System.Net.Http

<MudCard>
    <MudCardHeader>
        <MudText Typo="Typo.h5">
            Vehicle Schedule<MudIcon Icon="@Icons.Material.Filled.EditCalendar" Class="ms-2" />
        </MudText>
    </MudCardHeader>
    <MudCardContent>
        <MudStack>
            <MudTable Items="@DateRanges" Hover="true" Striped="true">
                <HeaderContent>
                    <MudTh>Date From</MudTh>
                    <MudTh>Date To</MudTh>
                    <MudTh></MudTh>
                </HeaderContent>
                <RowTemplate Context="range">
                    <MudTd>
                        <MudDatePicker @bind-Date="range.Start" Margin="Margin.Dense" ReadOnly="@(!_editable)" />
                    </MudTd>
                    <MudTd>
                        <MudDatePicker @bind-Date="range.End" Margin="Margin.Dense" ReadOnly="@(!_editable)" />
                    </MudTd>
                    <MudTd>
                        <MudButton OnClick="ProcessSomething"
                                   Style="border-radius: 10px; padding: 10px 10px; font-size: 1rem;"
                                   Variant="Variant.Filled"
                                   StartIcon="@Icons.Material.Filled.ExitToApp"
                                   Color="Color.Info"
                                   Size="Size.Small">
                            Load
                        </MudButton>
                    </MudTd>
                </RowTemplate>
            </MudTable>
        </MudStack>
    </MudCardContent>
</MudCard>

@code {
    private bool _editable = true;
    private bool _clearable = true;
    private List<DateRange> DateRanges { get; set; } = new() { new DateRange(DateTime.Today, DateTime.Today.AddDays(7)) };
    private bool _processing = false;

    async Task ProcessSomething()
    {
        _processing = true;
        await Task.Delay(2000);
        _processing = false;
    }
}