@page "/applications"
@using System.Text.Json
@using System.Net.Http

<PageTitle>Applications | PGAS Portal</PageTitle>

<MudGrid Spacing="3" Class="pa-3">
    <MudItem xs="12">
        <MudText Style="font-size: 30px"><b>Applications</b></MudText>
        <MudDivider />
        <MudGrid Spacing="5">
            @if (informationSystems != null && informationSystems.Any())
            {
                <MudVirtualize Items="informationSystems" Context="cluster">
                    <MudItem xs="12">
                        <MudStack Class="pa-2">
                            <MudText Class="pt-10"><b>@cluster.Cluster_Name</b></MudText>
                            <MudGrid>
                                <MudVirtualize Items="cluster.Information_Systems" Context="system">
                                    <MudItem xs="6" sm="3" lg="2">
                                        <MudPaper>
                                            <MudLink Href="@system.Information_System_Link" Target="_blank" Color="Color.Tertiary" Underline="Underline.None">
                                                <MudStack Row Style="height: 100%">
                                                    <MudStack Spacing="0" Class="pa-3" Style="width: 100%">
                                                        <MudStack Row Class="pa-0" Justify="Justify.SpaceBetween" Style="width: 100%">
                                                            <MudIcon Style="font-size: 4rem;" Icon="@(typeof(Icons.Material.Filled).GetField(system.Information_System_Icon)?.GetValue(null) as string)"
                                                                     Color="Color.Primary" />
                                                            <MudIcon Size="Size.Small" Icon="@((system.Information_System_Platform == "Web App") ? @Icons.Material.Filled.OpenInNew : @Icons.Material.Filled.DesktopWindows)" />
                                                        </MudStack>
                                                        <MudStack Style="min-height: 80px" Spacing="0">
                                                            <MudText Style="font-size: 14px"><b>@system.Information_System_Abbreviation</b></MudText>
                                                            <MudText Style="font-size: 12px">@system.Information_System_Name</MudText>
                                                        </MudStack>
                                                    </MudStack>
                                                </MudStack>
                                            </MudLink>
                                        </MudPaper>
                                    </MudItem>
                                </MudVirtualize>
                            </MudGrid>
                        </MudStack>
                    </MudItem>
                </MudVirtualize>
            }
            else
            {
                <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
            }
        </MudGrid>
    </MudItem>
</MudGrid>
@code {
    // Get API URL
    private readonly string API_URL = APIService.PGASPortalAPI;
    private List<v_clustered_information_systemDTO>? informationSystems;

    public class v_clustered_information_systemDTO
    {
        public string Cluster_Name { get; set; } = string.Empty;
        public string Cluster_Abbreviation { get; set; } = string.Empty;
        public string Cluster_Icon { get; set; } = string.Empty;
        public List<InformationSystemDTO>? Information_Systems { get; set; }
    }

    public class InformationSystemDTO
    {
        public string Information_System_Name { get; set; } = string.Empty;
        public string Information_System_Abbreviation { get; set; } = string.Empty;
        public string Information_System_Icon { get; set; } = string.Empty;
        public string Information_System_Link { get; set; } = string.Empty;
        public string Information_System_Platform { get; set; } = string.Empty;
    }
    // Initialization method to fetch data and update UI elements
    protected override async Task OnInitializedAsync()
    {
        try
        {
            await GetGroupedClusters();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching data: {ex.Message}");
        }
        finally
        {
            await base.OnInitializedAsync();
        }
    }

    // Method to fetch grouped information systems from the API
    private async Task GetGroupedClusters()
    {
        try
        {
            using HttpClient httpClient = new HttpClient();
            HttpResponseMessage httpResponse = await httpClient.GetAsync(API_URL + "/api/vw_clustered_information_system")!;
            httpResponse.EnsureSuccessStatusCode(); // Ensure a successful response

            using var responseStream = await httpResponse.Content.ReadAsStreamAsync();
            var options = new JsonSerializerOptions { PropertyNameCaseInsensitive = true };
            informationSystems = await JsonSerializer.DeserializeAsync<List<v_clustered_information_systemDTO>>(responseStream, options);

            StateHasChanged();
        }
        catch (HttpRequestException ex)
        {
            // Handle exception, log, or display an error message
            Console.WriteLine($"Error fetching data: {ex.Message}");
        }
    }

}
