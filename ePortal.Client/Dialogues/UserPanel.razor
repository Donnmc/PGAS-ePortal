@using System.Net.Http.Json
@using System.Text.Json
@inject UserService UserService

<MudDialog Style="width: 300px">
    <DialogContent>
        
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="@Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="@Logout">Log-out</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private const string API_URL = "https://localhost:7049";
    [CascadingParameter] MudDialogInstance? MudDialog { get; set; }
    private List<m_vwGetAllEmployee_MinifiedDTO>? pgasEmployee;

    public class eportalUser
    {
        public long? eid { get; set; }
        public string? SwipEmployeeID { get; set; }
        public string? email { get; set; }
        public string? password { get; set; }
    }

    void Submit() => MudDialog?.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog?.Cancel();


    public class m_vwGetAllEmployee_MinifiedDTO
    {
        // Office
        public string? OfficeName { get; set; }
        public string? OfficeAbbr { get; set; }
        // Employee Details
        public string? EmpName { get; set; }
        public long? eid { get; set; }
        public string? SwipeID { get; set; }
        public string? Position { get; set; }
        public int? SG { get; set; }
        public string? Status { get; set; }
        public bool? isactive { get; set; }
    }
    private async Task selectEmployee()
    {
        try
        {
            using HttpClient httpClient = new HttpClient();
            HttpResponseMessage httpResponse = await httpClient.GetAsync(API_URL + "/api/m_vwGetAllEmployee_Minified/query?searchDetails=" + UserService.eid)!;
            httpResponse.EnsureSuccessStatusCode(); // Ensure a successful response
            using var responseStream = await httpResponse.Content.ReadAsStreamAsync();
            pgasEmployee = await JsonSerializer.DeserializeAsync<List<m_vwGetAllEmployee_MinifiedDTO>>(responseStream,
                new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
        }
        catch (HttpRequestException ex)
        {
            // Handle exception, log, or display an error message
            Console.WriteLine($"Error fetching data: {ex.Message}");
        }
    }

    private async Task Logout()
    {
        await UserService.ClearUserSession();
        Submit();
    }
}
